openapi: "3.0.3"
info:
  title: "Subsistema 5: Gestión y emisión de facturas"
  version: "1.0.0"
  description: "Asignatura AOS: grupo 8"
  license:
    name: AOSGrupo8
    url: 'aaa'
  contact:
    name: Arquitecturas Orientadas a Servicios
    url: 'aaa'
    email: aaaaa@aaa.com
servers:
  - url: '{schema}://{server}:{port}/{basePath}'
    description: Servidor local
    variables:
      schema:
        description: Esquema
        default: http
        enum:
          - http
          - https
      server:
        description: Nombre del servidor
        default: 127.0.0.1
      port:
        description: Número de puerto
        default: '80'
      basePath:
        description: Ruta base
        default: api/v1
paths:
  /facturas:
    get:
      tags:
        - 'Facturas'
      summary: Devuelve todas las facturas existentes
      description: Devuelve todas las facturas del sistema
      operationId: api_users_cget
      responses:
        '200':
          description: Array of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  facturas:
                    description: Users array
                    type: array
                    items:
                      $ref: '#/components/schemas/Factura'
    put: 
      tags: 
        - 'Facturas'
      summary: Crea una factura.
      description: Creates a new user
      operationId: api_users_post
      security:
        - MiWApiSecurity:
            - writer
      requestBody:
        $ref: '#/components/requestBodies/FacturaRequestBody'
      responses:
        '201':
          description: '`Created`: user created'
    post: 
      tags: 
        - 'Facturas'
      summary: Crea una factura.
      description: Crea una nueva factura
      operationId: api_users_post
      security:
        - MiWApiSecurity:
            - writer
      requestBody:
        $ref: '#/components/requestBodies/FacturaRequestBody'
      responses:
        '201':
          description: '`Created`: Factura created'
    options:
      tags:
        - 'Facturas'
      summary: Provides the list of HTTP supported methods.
      description: Return a `Allow` header with a comma separated list of HTTP supported methods.
      operationId: api_users_coptions
      responses:
        '204':
          description: '`Allow` header &lt;Response body is empty&gt;'
  /facturas/{id}: 
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      tags:
        - 'Facturas'
      summary: Retrieves a User resource based on a single ID.
      description: Returns the user identified by `userId`.
      operationId: api_users_get
      security:
        - MiWApiSecurity:
            - reader
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factura'
    put:
      tags:
        - 'Facturas'
      summary: Updates the User resource.
      description: Updates the user identified by `userId`.
      operationId: api_users_put
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factura'
      security:
        - MiWApiSecurity:
            - writer
    delete:
      tags:
        - 'Facturas'
      summary: Removes the User resource.
      description: Deletes the user identified by `userId`.
      operationId: api_users_delete
      security:
        - MiWApiSecurity:
            - writer
      responses:
        '204':
          description: User deleted &lt;Response body is empty&gt;
    options:
      tags:
        - 'Facturas'
      summary: Provides the list of HTTP supported methods.
      description: Return a `Allow` header with a comma separated list of HTTP supported methods.
      operationId: api_users_options_id
      responses:
        '204':
          description: '`Allow` header &lt;Response body is empty&gt;'         
  /clientes/{id}/facturas/:
    parameters:
    - $ref: '#/components/parameters/id'

    get:
        tags:
          - 'Clientes'
        summary: Devuelve todas las facturas de un cliente.
        description: Dado un idCliente, devuelve todas sus facturas.
        operationId: api_users_get
        security:
          - MiWApiSecurity:
              - reader
        responses:
          '200':
            description: Array de facturas
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    facturas:
                      description: Factura array
                      type: array
                      items:
                        $ref: '#/components/parameters/id'




components:
  securitySchemes: {}
  schemas:
    Factura:
      type: object
      description: Contenido de una factura
      properties:
        facturaId:
          description: Identificador de la factura
          readOnly: True
          type: integer
          format: int32
        Conceptos:
          description: Contenido de una factura
          type: array
          items:
            $ref: '#/components/schemas/Trabajo'
    Trabajo:
      type: object
      description: Añadir descripción 
      properties:
        trabajoId:
          description: Identificador del trabajo
          readOnly: true
          type: integer
          format: int32
        idVehiculo:
          description: ID del vehículo sobre el que se reliza el trabajo
          readOnly: true
          type: integer
          format: int32
        idCliente:
          description: ID del cliente propietario del vehículo
          readOnly: true
          type: integer
          format: int32
        nombre:
          description: Nombre del tipo de trabajo
          type: string
        descripcion:
          description: Descripción del trabajo
          type: string
        estadoTrabajo:
          description: Posibles estados del trabajo [Creado, Planificado, Iniciado, Terminado]
          type: string
          enum:
          - "Creado"
          - "Planificado"
          - "Iniciado"
          - "Terminado"    #linea 674
        fechaInicio:
          description: Fecha en la que se inicializa el trabajo
          type: string
          format: date-time
        fechaFin:
          description: Fecha en la que se finaliza el trabajo
          type: string
          format: date-time
      x-last-modified: 1648662408321
  headers: {}
  responses:
    '200':
      description: Operación exitosa
      x-last-modified: 1648661433969
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Factura'
  parameters:
    id:
      in: path
      name: id
      example: GET /api/5c2e12a0-3391-4a4a-b82e-1f7de848c7aa
      description: |-
        **ID**. 
         ID de la factura. 
         La API responde con la factura.
      schema:
        type: number
        format: uuid
      x-last-modified: 1648661309447
      required: true
      deprecated: false
  examples:
    error:
      summary: Invalid Request
      description: Ejemplo de respuesta cuando el id de factura no existe
      value:
        code: '400'
        message: Invalid Request
      x-last-modified: 164866146366
  requestBodies:
    FacturaRequestBody:
      description: '`Factura` data'
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/Factura'



