# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.trabajo import Trabajo as SchemasTrabajoYml  # noqa: F401,E501
from swagger_server import util


class Factura(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, factura_id: int=None, id_cliente: int=None, conceptos: List[SchemasTrabajoYml]=None, fecha_emision: datetime=None, importe: float=None, links: object=None):  # noqa: E501
        """Factura - a model defined in Swagger

        :param factura_id: The factura_id of this Factura.  # noqa: E501
        :type factura_id: int
        :param id_cliente: The id_cliente of this Factura.  # noqa: E501
        :type id_cliente: int
        :param conceptos: The conceptos of this Factura.  # noqa: E501
        :type conceptos: List[SchemasTrabajoYml]
        :param fecha_emision: The fecha_emision of this Factura.  # noqa: E501
        :type fecha_emision: datetime
        :param importe: The importe of this Factura.  # noqa: E501
        :type importe: float
        :param links: The links of this Factura.  # noqa: E501
        :type links: object
        """
        self.swagger_types = {
            'factura_id': int,
            'id_cliente': int,
            'conceptos': List[SchemasTrabajoYml],
            'fecha_emision': datetime,
            'importe': float,
            'links': object
        }

        self.attribute_map = {
            'factura_id': 'facturaId',
            'id_cliente': 'idCliente',
            'conceptos': 'Conceptos',
            'fecha_emision': 'fechaEmision',
            'importe': 'importe',
            'links': 'links'
        }
        self._factura_id = factura_id
        self._id_cliente = id_cliente
        self._conceptos = conceptos
        self._fecha_emision = fecha_emision
        self._importe = importe
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'Factura':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Factura of this Factura.  # noqa: E501
        :rtype: Factura
        """
        return util.deserialize_model(dikt, cls)

    @property
    def factura_id(self) -> int:
        """Gets the factura_id of this Factura.

        Identificador de la factura  # noqa: E501

        :return: The factura_id of this Factura.
        :rtype: int
        """
        return self._factura_id

    @factura_id.setter
    def factura_id(self, factura_id: int):
        """Sets the factura_id of this Factura.

        Identificador de la factura  # noqa: E501

        :param factura_id: The factura_id of this Factura.
        :type factura_id: int
        """

        self._factura_id = factura_id

    @property
    def id_cliente(self) -> int:
        """Gets the id_cliente of this Factura.

        Identificador del cliente a facturar  # noqa: E501

        :return: The id_cliente of this Factura.
        :rtype: int
        """
        return self._id_cliente

    @id_cliente.setter
    def id_cliente(self, id_cliente: int):
        """Sets the id_cliente of this Factura.

        Identificador del cliente a facturar  # noqa: E501

        :param id_cliente: The id_cliente of this Factura.
        :type id_cliente: int
        """

        self._id_cliente = id_cliente

    @property
    def conceptos(self) -> List[SchemasTrabajoYml]:
        """Gets the conceptos of this Factura.

        Trabajos pertenecientes a la factura  # noqa: E501

        :return: The conceptos of this Factura.
        :rtype: List[SchemasTrabajoYml]
        """
        return self._conceptos

    @conceptos.setter
    def conceptos(self, conceptos: List[SchemasTrabajoYml]):
        """Sets the conceptos of this Factura.

        Trabajos pertenecientes a la factura  # noqa: E501

        :param conceptos: The conceptos of this Factura.
        :type conceptos: List[SchemasTrabajoYml]
        """

        self._conceptos = conceptos

    @property
    def fecha_emision(self) -> datetime:
        """Gets the fecha_emision of this Factura.

        Fecha de emisi贸n de la factura  # noqa: E501

        :return: The fecha_emision of this Factura.
        :rtype: datetime
        """
        return self._fecha_emision

    @fecha_emision.setter
    def fecha_emision(self, fecha_emision: datetime):
        """Sets the fecha_emision of this Factura.

        Fecha de emisi贸n de la factura  # noqa: E501

        :param fecha_emision: The fecha_emision of this Factura.
        :type fecha_emision: datetime
        """

        self._fecha_emision = fecha_emision

    @property
    def importe(self) -> float:
        """Gets the importe of this Factura.

        Importe total de la factura. Suma de todos los importes.  # noqa: E501

        :return: The importe of this Factura.
        :rtype: float
        """
        return self._importe

    @importe.setter
    def importe(self, importe: float):
        """Sets the importe of this Factura.

        Importe total de la factura. Suma de todos los importes.  # noqa: E501

        :param importe: The importe of this Factura.
        :type importe: float
        """

        self._importe = importe

    @property
    def links(self) -> object:
        """Gets the links of this Factura.

        Enlaces de relaci贸n  # noqa: E501

        :return: The links of this Factura.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links: object):
        """Sets the links of this Factura.

        Enlaces de relaci贸n  # noqa: E501

        :param links: The links of this Factura.
        :type links: object
        """

        self._links = links
